used for merging branches within the applications: 

in the real world, there can be many branches, for managing different things, such as: 
users 
homepage
databasebranch 


use : 
git merge branchname

// To delete the branch: 

git branch -d branchname


// To create a branch and instantly check it out 

git checkout -b branchname 



// merging recursively situation
// when git has many branches and many commits had been done so much without merging the branches 
// to merge recursively for inclusion of all branches : 

git merge branchname 

// it will open a terminal, write: 
:wq 

// it will exist with the branch merged

// to merge with no fast forwarding: will give additional meaning that those changes were made on a branch:  
// personal note: This is a better way of merging since even if the branch is deleted, the commits will remain 
git merge --no-ff branchname




// merge conflicts 
// sometimes in different branches the same file might have been modified and committed and one of the branches merged to main 
// when the later branch is about to merged with git, there usually will be a merge conflict because it contains a different copy 
of the same file name 
// so use a text editor and open the files in contention and update manually, then add and commit 






